{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as tslib_1 from \"tslib\";\nimport { Logger } from \"./Logger\";\nimport { UrlUtils } from \"./utils/UrlUtils\";\n/**\r\n * Defaults for the Configuration Options\r\n */\n\nvar FRAME_TIMEOUT = 6000;\nvar OFFSET = 300;\nvar NAVIGATE_FRAME_WAIT = 500;\nvar DEFAULT_AUTH_OPTIONS = {\n  clientId: \"\",\n  authority: null,\n  validateAuthority: true,\n  redirectUri: function () {\n    return UrlUtils.getDefaultRedirectUri();\n  },\n  postLogoutRedirectUri: function () {\n    return UrlUtils.getDefaultRedirectUri();\n  },\n  navigateToLoginRequestUrl: true\n};\nvar DEFAULT_CACHE_OPTIONS = {\n  cacheLocation: \"sessionStorage\",\n  storeAuthStateInCookie: false\n};\nvar DEFAULT_SYSTEM_OPTIONS = {\n  logger: new Logger(null),\n  loadFrameTimeout: FRAME_TIMEOUT,\n  tokenRenewalOffsetSeconds: OFFSET,\n  navigateFrameWait: NAVIGATE_FRAME_WAIT\n};\nvar DEFAULT_FRAMEWORK_OPTIONS = {\n  isAngular: false,\n  unprotectedResources: new Array(),\n  protectedResourceMap: new Map()\n};\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param TAuthOptions\r\n * @param TCacheOptions\r\n * @param TSystemOptions\r\n * @param TFrameworkOptions\r\n *\r\n * @returns TConfiguration object\r\n */\n\nexport function buildConfiguration(_a) {\n  var auth = _a.auth,\n      _b = _a.cache,\n      cache = _b === void 0 ? {} : _b,\n      _c = _a.system,\n      system = _c === void 0 ? {} : _c,\n      _d = _a.framework,\n      framework = _d === void 0 ? {} : _d;\n  var overlayedConfig = {\n    auth: tslib_1.__assign({}, DEFAULT_AUTH_OPTIONS, auth),\n    cache: tslib_1.__assign({}, DEFAULT_CACHE_OPTIONS, cache),\n    system: tslib_1.__assign({}, DEFAULT_SYSTEM_OPTIONS, system),\n    framework: tslib_1.__assign({}, DEFAULT_FRAMEWORK_OPTIONS, framework)\n  };\n  return overlayedConfig;\n}","map":null,"metadata":{},"sourceType":"module"}