{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { CryptoUtils } from \"./utils/CryptoUtils\";\nimport { ClientAuthError } from \"./error/ClientAuthError\";\nimport { StringUtils } from \"./utils/StringUtils\";\n/**\r\n * @hidden\r\n */\n\nvar ClientInfo =\n/** @class */\nfunction () {\n  function ClientInfo(rawClientInfo) {\n    if (!rawClientInfo || StringUtils.isEmpty(rawClientInfo)) {\n      this.uid = \"\";\n      this.utid = \"\";\n      return;\n    }\n\n    try {\n      var decodedClientInfo = CryptoUtils.base64Decode(rawClientInfo);\n      var clientInfo = JSON.parse(decodedClientInfo);\n\n      if (clientInfo) {\n        if (clientInfo.hasOwnProperty(\"uid\")) {\n          this.uid = clientInfo.uid;\n        }\n\n        if (clientInfo.hasOwnProperty(\"utid\")) {\n          this.utid = clientInfo.utid;\n        }\n      }\n    } catch (e) {\n      throw ClientAuthError.createClientInfoDecodingError(e);\n    }\n  }\n\n  Object.defineProperty(ClientInfo.prototype, \"uid\", {\n    get: function () {\n      return this._uid ? this._uid : \"\";\n    },\n    set: function (uid) {\n      this._uid = uid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ClientInfo.prototype, \"utid\", {\n    get: function () {\n      return this._utid ? this._utid : \"\";\n    },\n    set: function (utid) {\n      this._utid = utid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ClientInfo;\n}();\n\nexport { ClientInfo };","map":null,"metadata":{},"sourceType":"module"}