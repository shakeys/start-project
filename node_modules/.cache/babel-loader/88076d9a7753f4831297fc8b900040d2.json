{"ast":null,"code":"/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\n\n/**\r\n * @constant\r\n * @function\r\n * Validates availability of Promise and fetch in global context\r\n * @returns The true in case the Promise and fetch available, otherwise throws error\r\n */\nexport const validatePolyFilling = () => {\n  if (typeof Promise === \"undefined\" && typeof fetch === \"undefined\") {\n    const error = new Error(\"Library cannot function without Promise and fetch. So, please provide polyfill for them.\");\n    error.name = \"PolyFillNotAvailable\";\n    throw error;\n  } else if (typeof Promise === \"undefined\") {\n    const error = new Error(\"Library cannot function without Promise. So, please provide polyfill for it.\");\n    error.name = \"PolyFillNotAvailable\";\n    throw error;\n  } else if (typeof fetch === \"undefined\") {\n    const error = new Error(\"Library cannot function without fetch. So, please provide polyfill for it.\");\n    error.name = \"PolyFillNotAvailable\";\n    throw error;\n  }\n\n  return true;\n};","map":null,"metadata":{},"sourceType":"module"}