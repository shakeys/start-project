{"ast":null,"code":"/**\r\n * -------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\r\n * See License in the project root for license information.\r\n * -------------------------------------------------------------------------------------------\r\n */\n\n/**\r\n * @class\r\n * @implements MiddlewareOptions\r\n * A class representing RedirectHandlerOptions\r\n */\nexport class RedirectHandlerOptions {\n  /**\r\n   * @public\r\n   * @constructor\r\n   * To create an instance of RedirectHandlerOptions\r\n   * @param {number} [maxRedirects = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS] - The max redirects value\r\n   * @param {ShouldRedirect} [shouldRedirect = RedirectHandlerOptions.DEFAULT_SHOULD_RETRY] - The should redirect callback\r\n   * @returns An instance of RedirectHandlerOptions\r\n   */\n  constructor(maxRedirects = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS, shouldRedirect = RedirectHandlerOptions.DEFAULT_SHOULD_RETRY) {\n    if (maxRedirects > RedirectHandlerOptions.MAX_MAX_REDIRECTS) {\n      const error = new Error(\"MaxRedirects should not be more than \".concat(RedirectHandlerOptions.MAX_MAX_REDIRECTS));\n      error.name = \"MaxLimitExceeded\";\n      throw error;\n    }\n\n    this.maxRedirects = maxRedirects;\n    this.shouldRedirect = shouldRedirect;\n  }\n\n}\n/**\r\n * @private\r\n * @static\r\n * A member holding default max redirects value\r\n */\n\nRedirectHandlerOptions.DEFAULT_MAX_REDIRECTS = 5;\n/**\r\n * @private\r\n * @static\r\n * A member holding maximum max redirects value\r\n */\n\nRedirectHandlerOptions.MAX_MAX_REDIRECTS = 20;\n/**\r\n * @private\r\n * A member holding default shouldRedirect callback\r\n */\n\nRedirectHandlerOptions.DEFAULT_SHOULD_RETRY = () => true;","map":null,"metadata":{},"sourceType":"module"}