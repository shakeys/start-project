{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as tslib_1 from \"tslib\";\nimport { AuthError } from \"./AuthError\";\nexport var ServerErrorMessage = {\n  serverUnavailable: {\n    code: \"server_unavailable\",\n    desc: \"Server is temporarily unavailable.\"\n  },\n  unknownServerError: {\n    code: \"unknown_server_error\"\n  }\n};\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\n\nvar ServerError =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(ServerError, _super);\n\n  function ServerError(errorCode, errorMessage) {\n    var _this = _super.call(this, errorCode, errorMessage) || this;\n\n    _this.name = \"ServerError\";\n    Object.setPrototypeOf(_this, ServerError.prototype);\n    return _this;\n  }\n\n  ServerError.createServerUnavailableError = function () {\n    return new ServerError(ServerErrorMessage.serverUnavailable.code, ServerErrorMessage.serverUnavailable.desc);\n  };\n\n  ServerError.createUnknownServerError = function (errorDesc) {\n    return new ServerError(ServerErrorMessage.unknownServerError.code, errorDesc);\n  };\n\n  return ServerError;\n}(AuthError);\n\nexport { ServerError };","map":null,"metadata":{},"sourceType":"module"}